function _typeof(e){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function _regeneratorRuntime(){_regeneratorRuntime=function(){return c};var s,c={},e=Object.prototype,u=e.hasOwnProperty,l=Object.defineProperty||function(e,t,n){e[t]=n.value},t="function"==typeof Symbol?Symbol:{},o=t.iterator||"@@iterator",n=t.asyncIterator||"@@asyncIterator",r=t.toStringTag||"@@toStringTag";function a(e,t,n){return Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}),e[t]}try{a({},"")}catch(s){a=function(e,t,n){return e[t]=n}}function i(e,t,n,o){var r,a,c,i,t=t&&t.prototype instanceof g?t:g,t=Object.create(t.prototype),o=new I(o||[]);return l(t,"_invoke",{value:(r=e,a=n,c=o,i=p,function(e,t){if(i===h)throw Error("Generator is already running");if(i===f){if("throw"===e)throw t;return{value:s,done:!0}}for(c.method=e,c.arg=t;;){var n=c.delegate;if(n){n=function e(t,n){var o=n.method,r=t.iterator[o];if(r===s)return n.delegate=null,"throw"===o&&t.iterator.return&&(n.method="return",n.arg=s,e(t,n),"throw"===n.method)||"return"!==o&&(n.method="throw",n.arg=new TypeError("The iterator does not provide a '"+o+"' method")),y;o=d(r,t.iterator,n.arg);if("throw"===o.type)return n.method="throw",n.arg=o.arg,n.delegate=null,y;r=o.arg;return r?r.done?(n[t.resultName]=r.value,n.next=t.nextLoc,"return"!==n.method&&(n.method="next",n.arg=s),n.delegate=null,y):r:(n.method="throw",n.arg=new TypeError("iterator result is not an object"),n.delegate=null,y)}(n,c);if(n){if(n===y)continue;return n}}if("next"===c.method)c.sent=c._sent=c.arg;else if("throw"===c.method){if(i===p)throw i=f,c.arg;c.dispatchException(c.arg)}else"return"===c.method&&c.abrupt("return",c.arg);i=h;n=d(r,a,c);if("normal"===n.type){if(i=c.done?f:m,n.arg===y)continue;return{value:n.arg,done:c.done}}"throw"===n.type&&(i=f,c.method="throw",c.arg=n.arg)}})}),t}function d(e,t,n){try{return{type:"normal",arg:e.call(t,n)}}catch(e){return{type:"throw",arg:e}}}c.wrap=i;var p="suspendedStart",m="suspendedYield",h="executing",f="completed",y={};function g(){}function b(){}function v(){}var t={},x=(a(t,o,function(){return this}),Object.getPrototypeOf),x=x&&x(x(w([]))),S=(x&&x!==e&&u.call(x,o)&&(t=x),v.prototype=g.prototype=Object.create(t));function E(e){["next","throw","return"].forEach(function(t){a(e,t,function(e){return this._invoke(t,e)})})}function _(c,i){var t;l(this,"_invoke",{value:function(n,o){function e(){return new i(function(e,t){!function t(e,n,o,r){var a,e=d(c[e],c,n);if("throw"!==e.type)return(n=(a=e.arg).value)&&"object"==_typeof(n)&&u.call(n,"__await")?i.resolve(n.__await).then(function(e){t("next",e,o,r)},function(e){t("throw",e,o,r)}):i.resolve(n).then(function(e){a.value=e,o(a)},function(e){return t("throw",e,o,r)});r(e.arg)}(n,o,e,t)})}return t=t?t.then(e,e):e()}})}function C(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function L(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function I(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(C,this),this.reset(!0)}function w(t){if(t||""===t){var n,e=t[o];if(e)return e.call(t);if("function"==typeof t.next)return t;if(!isNaN(t.length))return n=-1,(e=function e(){for(;++n<t.length;)if(u.call(t,n))return e.value=t[n],e.done=!1,e;return e.value=s,e.done=!0,e}).next=e}throw new TypeError(_typeof(t)+" is not iterable")}return l(S,"constructor",{value:b.prototype=v,configurable:!0}),l(v,"constructor",{value:b,configurable:!0}),b.displayName=a(v,r,"GeneratorFunction"),c.isGeneratorFunction=function(e){e="function"==typeof e&&e.constructor;return!!e&&(e===b||"GeneratorFunction"===(e.displayName||e.name))},c.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,v):(e.__proto__=v,a(e,r,"GeneratorFunction")),e.prototype=Object.create(S),e},c.awrap=function(e){return{__await:e}},E(_.prototype),a(_.prototype,n,function(){return this}),c.AsyncIterator=_,c.async=function(e,t,n,o,r){void 0===r&&(r=Promise);var a=new _(i(e,t,n,o),r);return c.isGeneratorFunction(t)?a:a.next().then(function(e){return e.done?e.value:a.next()})},E(S),a(S,r,"Generator"),a(S,o,function(){return this}),a(S,"toString",function(){return"[object Generator]"}),c.keys=function(e){var t,n=Object(e),o=[];for(t in n)o.push(t);return o.reverse(),function e(){for(;o.length;){var t=o.pop();if(t in n)return e.value=t,e.done=!1,e}return e.done=!0,e}},c.values=w,I.prototype={constructor:I,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=s,this.done=!1,this.delegate=null,this.method="next",this.arg=s,this.tryEntries.forEach(L),!e)for(var t in this)"t"===t.charAt(0)&&u.call(this,t)&&!isNaN(+t.slice(1))&&(this[t]=s)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(n){if(this.done)throw n;var o=this;function e(e,t){return a.type="throw",a.arg=n,o.next=e,t&&(o.method="next",o.arg=s),!!t}for(var t=this.tryEntries.length-1;0<=t;--t){var r=this.tryEntries[t],a=r.completion;if("root"===r.tryLoc)return e("end");if(r.tryLoc<=this.prev){var c=u.call(r,"catchLoc"),i=u.call(r,"finallyLoc");if(c&&i){if(this.prev<r.catchLoc)return e(r.catchLoc,!0);if(this.prev<r.finallyLoc)return e(r.finallyLoc)}else if(c){if(this.prev<r.catchLoc)return e(r.catchLoc,!0)}else{if(!i)throw Error("try statement without catch or finally");if(this.prev<r.finallyLoc)return e(r.finallyLoc)}}}},abrupt:function(e,t){for(var n=this.tryEntries.length-1;0<=n;--n){var o=this.tryEntries[n];if(o.tryLoc<=this.prev&&u.call(o,"finallyLoc")&&this.prev<o.finallyLoc){var r=o;break}}var a=(r=r&&("break"===e||"continue"===e)&&r.tryLoc<=t&&t<=r.finallyLoc?null:r)?r.completion:{};return a.type=e,a.arg=t,r?(this.method="next",this.next=r.finallyLoc,y):this.complete(a)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),y},finish:function(e){for(var t=this.tryEntries.length-1;0<=t;--t){var n=this.tryEntries[t];if(n.finallyLoc===e)return this.complete(n.completion,n.afterLoc),L(n),y}},catch:function(e){for(var t=this.tryEntries.length-1;0<=t;--t){var n,o,r=this.tryEntries[t];if(r.tryLoc===e)return"throw"===(n=r.completion).type&&(o=n.arg,L(r)),o}throw Error("illegal catch attempt")},delegateYield:function(e,t,n){return this.delegate={iterator:w(e),resultName:t,nextLoc:n},"next"===this.method&&(this.arg=s),y}},c}function asyncGeneratorStep(e,t,n,o,r,a,c){try{var i=e[a](c),s=i.value}catch(e){return void n(e)}i.done?t(s):Promise.resolve(s).then(o,r)}function _asyncToGenerator(i){return function(){var e=this,c=arguments;return new Promise(function(t,n){var o=i.apply(e,c);function r(e){asyncGeneratorStep(o,t,n,r,a,"next",e)}function a(e){asyncGeneratorStep(o,t,n,r,a,"throw",e)}r(void 0)})}}function _toConsumableArray(e){return _arrayWithoutHoles(e)||_iterableToArray(e)||_unsupportedIterableToArray(e)||_nonIterableSpread()}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _iterableToArray(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}function _arrayWithoutHoles(e){if(Array.isArray(e))return _arrayLikeToArray(e)}function _defineProperty(e,t,n){return(t=_toPropertyKey(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function _toPropertyKey(e){e=_toPrimitive(e,"string");return"symbol"==_typeof(e)?e:e+""}function _toPrimitive(e,t){if("object"!=_typeof(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0===n)return("string"===t?String:Number)(e);n=n.call(e,t||"default");if("object"!=_typeof(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}function _slicedToArray(e,t){return _arrayWithHoles(e)||_iterableToArrayLimit(e,t)||_unsupportedIterableToArray(e,t)||_nonIterableRest()}function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _unsupportedIterableToArray(e,t){var n;if(e)return"string"==typeof e?_arrayLikeToArray(e,t):"Map"===(n="Object"===(n={}.toString.call(e).slice(8,-1))&&e.constructor?e.constructor.name:n)||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?_arrayLikeToArray(e,t):void 0}function _arrayLikeToArray(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,o=Array(t);n<t;n++)o[n]=e[n];return o}function _iterableToArrayLimit(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var o,r,a,c,i=[],s=!0,u=!1;try{if(a=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;s=!1}else for(;!(s=(o=a.call(n)).done)&&(i.push(o.value),i.length!==t);s=!0);}catch(e){u=!0,r=e}finally{try{if(!s&&null!=n.return&&(c=n.return(),Object(c)!==c))return}finally{if(u)throw r}}return i}}function _arrayWithHoles(e){if(Array.isArray(e))return e}import{initializeApp}from"https://www.gstatic.com/firebasejs/11.0.1/firebase-app.js";import{getAuth,createUserWithEmailAndPassword,signInWithEmailAndPassword,browserLocalPersistence,onAuthStateChanged,signOut}from"https://www.gstatic.com/firebasejs/11.0.1/firebase-auth.js";import{getDatabase,ref,set,get,onValue,update,remove}from"https://www.gstatic.com/firebasejs/11.0.1/firebase-database.js";var overviewBox=document.querySelector(".main__box"),profileBox=document.querySelector(".main__profile"),subsriptionBox=document.querySelector(".main__subsbox"),totalSubs=document.querySelector("#totalSubs"),incomeTotal=document.querySelector("#incomeTotal"),expenseTotal=document.querySelector("#expenseTotal"),incomePercent=document.querySelector("#incomePercent"),expensePercent=document.querySelector("#expensePercent"),totalBalance=document.querySelector("#totalBalance"),revenueLastMonth=document.querySelector("#revenueLastMonth"),budgetSpent=document.querySelector("#amountSpent"),budgetLimit=document.querySelector("#amountToSpent"),budgetLeft=document.querySelector("#amountLeft"),expenseSplitTotal=document.querySelector("#expenseSplitTotal"),expenseSplitMonth=document.querySelector("#expenseSplitMonth"),foodPercent=document.querySelector("#food"),healthPercent=document.querySelector("#health"),billsPercent=document.querySelector("#bills"),entertainmentPercent=document.querySelector("#entertainment"),transportationPercent=document.querySelector("#transportation"),miscellaneousPercent=document.querySelector("#miscellaneous"),expenseSplitCircle=document.querySelector(".main__circle"),revenueList=document.querySelector(".main__revenue-list"),lastSpendings=document.querySelector(".main__last-list"),loginTopBtn=document.querySelectorAll(".login__topbtn"),loginInput=document.querySelectorAll(".login__input"),emailInput=document.querySelector("#email"),passwordInput=document.querySelector("#password"),loginBtn=document.querySelector(".login__mainbtn"),loginBox=document.querySelector(".login"),addBtnTotalBalance=document.querySelector("#addTotal"),addIncomePopup=document.querySelector(".add__popup"),addExpensePopup=document.querySelector(".expense__popup"),subChangePopup=document.querySelector(".subchange__popup"),addSubPopup=document.querySelector(".sub__popup"),addIncomeBtn=document.querySelector("#addIncome"),addExpenseBtn=document.querySelector("#addExpense"),addSubBtn=document.querySelector("#addSub"),changeSubBtn=document.querySelector("#changeSub"),incomeBoxBtn=document.querySelector("#incomeBtn"),expenseBoxBtn=document.querySelector("#expenseBtn"),subBoxBtn=document.querySelector("#subBtn"),addIncomeInput=document.querySelector("#addIncomeInput"),addExpenseInput=document.querySelector("#addExpenseInput"),expenseSelect=document.querySelector("#expenseType"),subNameInput=document.querySelector("#addSubName"),subPriceInput=document.querySelector("#addSubAmount"),subPayementInput=document.querySelector("#addPaymentInterval"),subChangePriceInput=document.querySelector("#changeSubAmount"),subChangeNameInput=document.querySelector("#changeSubName"),signoutBtn=document.querySelector("#signout"),profileBtn=document.querySelector("#profile"),overviewBtn=document.querySelector("#overview"),revenueBoxScroll=document.querySelector(".main__revenue-list"),userEmail=document.querySelector("#profile__email"),profileLimitInput=document.querySelector(".profile__input"),currencySelect=document.querySelector("#currencySelect"),profileOptions=document.querySelectorAll(".profile__option"),loadingBox=document.querySelector(".loading"),loader=document.querySelector(".loader"),resetPopupsBtns=document.querySelectorAll(".reset-popups"),popupsBg=document.querySelector(".popupsbg"),passwordError=document.querySelector("#passwordError"),emailError=document.querySelector("#emailError"),expenseSplitOptions=document.querySelectorAll(".expenseSplitOption"),subDotsBtn="",subXBtns="",subTypesBtn="",currentChangeSubId="",spendingBtns="",spendingXBtns="",spendingDeleteBtns="",currentDate=new Date,year=(new Date).getFullYear(),month=(new Date).getMonth()+1,mili=(new Date).getMilliseconds(),maxIncome=0,orderOfLastSpending=0,inputType="",userLimit=0,totalUserBalance=0,currentMonth=month,monthNames=["January","February","March","April","May","June","July","August","September","October","November","December"],monthNamesShort=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sept","Oct","Nov","Dec"],firebaseConfig={apiKey:"AIzaSyAnQPHugOMwt4HwC-i-1srtFBr8oe1OEiY",authDomain:"mywealth-8f207.firebaseapp.com",projectId:"mywealth-8f207",storageBucket:"mywealth-8f207.appspot.com",messagingSenderId:"735896347785",appId:"1:735896347785:web:851e7179c61fb1e4e59258",databaseURL:"https://mywealth-8f207-default-rtdb.europe-west1.firebasedatabase.app"},app=initializeApp(firebaseConfig),auth=getAuth(app),db=getDatabase(app),checkWhatTypeOfAction=function(){switch(loginTopBtn.forEach(function(e){e.classList.contains("login-btn-active")&&(inputType=e.id)}),inputType){case"signup":createUser();break;case"signin":loginUser()}},checkUserAuth=function(){onAuthStateChanged(auth,function(e){e?(loginBox.classList.add("hidden"),loader.classList.remove("hidden"),setEverything()):loginBox.classList.remove("hidden")})},createUser=function(){""!==passwordInput.value&&""!==emailInput.value&&"signup"===inputType&&createUserWithEmailAndPassword(auth,emailInput.value,passwordInput.value).then(function(e){e=e.user;set(ref(db,"users/".concat(e.uid)),{email:emailInput.value,currency:"$",limit:3e3}).catch(function(e){console.error("Error while adding user to database: ",e)}),set(ref(db,"users/".concat(e.uid,"/money/year").concat(year,"/month").concat(month)),{income:0,expense:0,types:{food:0,health:0,bills:0,entertainment:0,transportation:0,miscellaneous:0}}).catch(function(e){console.error("Error while adding user to database: ",e)}),setEverything()}).catch(function(e){var t,n=e.code,o=e.message;switch(n){case"auth/email-already-in-use":emailError.textContent=t="This e-mail is in use by other account.";break;case"auth/invalid-email":emailError.textContent=t="Wrong format of e-mail.";break;case"auth/password-does-not-meet-requirements":passwordError.textContent=t="Password is too weak. It need to contain:\n- min length of 6\n- uppercase character\n- lowercase character\n- numeric character";break;default:t="Error: "+o,console.log(t)}})},loginUser=function(){""!==passwordInput.value&&""!==emailInput.value&&"signin"===inputType&&signInWithEmailAndPassword(auth,emailInput.value,passwordInput.value).then(function(){setEverything()}).catch(function(e){var t,n=e.code,e=e.message;"auth/invalid-credential"===n?emailError.textContent=t="Wrong login info.":(t="Error: "+e,console.log(t))})},signoutUser=function(){signOut(auth).then(function(){window.location.reload()}).catch(function(e){console.error("Error signing out:",e)})},setItemsToSubBox=function(){auth.onAuthStateChanged(function(e){e=ref(db,"users/".concat(e.uid,"/subs"));onValue(e,function(e){subsriptionBox.innerHTML="",e.exists()&&e.forEach(function(e){var t=e.val(),n=document.createElement("div"),o=document.createElement("div"),r=document.createElement("p"),a=document.createElement("p"),c=document.createElement("div"),i=document.createElement("p"),s=document.createElement("i"),u=document.createElement("div"),l=document.createElement("div"),d=document.createElement("button"),p=document.createElement("button"),m=document.createElement("i");n.id=e.key,n.classList.add("main__subsbox-item"),c.classList.add("display-flex","aligncenter"),r.classList.add("main__text","main__text--20"),a.classList.add("main__text","main__text--80alpha","main__text--14"),i.classList.add("main__text","main__text--20","main__text--bold"),s.classList.add("fa-solid","fa-ellipsis-vertical","sub-dots"),u.classList.add("main__subsbox-item-bg"),l.classList.add("main__subsbox-item-btns"),d.classList.add("main__subsbox-item-btn"),p.classList.add("main__subsbox-item-btn"),m.classList.add("fa-solid","fa-x","sub-x"),r.textContent=t.name,i.innerHTML="".concat(t.price,'<span class="currency"></span>');e=_slicedToArray(t.dateOfPay.split(",").map(Number),3),t=e[0],t=new Date(t,e[1]-1,e[2]);a.textContent="Next ".concat(t.getDate()," ").concat(monthNames[t.getMonth()]),d.textContent="Delete",p.textContent="Edit",o.append(r,a),c.append(i,s),l.append(d,p),u.append(l,m),n.append(u,o,c),subsriptionBox.append(n),(subDotsBtn=document.querySelectorAll(".sub-dots")).forEach(function(e){e.addEventListener("click",subOptions)}),(subXBtns=document.querySelectorAll(".sub-x")).forEach(function(e){e.addEventListener("click",subOptions)}),(subTypesBtn=document.querySelectorAll(".main__subsbox-item-btn")).forEach(function(e){e.addEventListener("click",subType)})}),totalSubs.textContent=subsriptionBox.childElementCount,setCurrency()})})},checkIfSubsGotPayed=function(){auth.onAuthStateChanged(function(r){var e=ref(db,"users/".concat(r.uid,"/subs"));get(e).then(function(e){e.forEach(function(e){var t=e.val(),n=t.dateOfPay,o=new Date(n);o.setMonth(o.getMonth()+parseInt(t.paymentIntervalInMonths)),t=(0===o.getMonth()?"".concat(o.getFullYear(),", ").concat(o.getMonth()+1,", "):"".concat(o.getFullYear(),", ").concat(o.getMonth(),", ")).concat(o.getDate()),currentDate>=new Date(n)&&update(ref(db,"users/".concat(r.uid,"/subs/").concat(e.key)),{dateOfBuy:n,dateOfPay:t})})})})},setCurrentIncomeAndExpense=function(){auth.onAuthStateChanged(function(a){var e="users/".concat(a.uid,"/money/year").concat(year,"/month").concat(month,"/income"),e=ref(db,e),e=(onValue(e,function(e){e.exists()?incomeTotal.textContent=formatNumber(e.val()):console.log("No data available for income")}),"users/".concat(a.uid,"/money/year").concat(year,"/month").concat(month,"/expense")),e=ref(db,e);onValue(e,function(e){e.exists()?expenseTotal.textContent=formatNumber(e.val()):console.log("No data available for expense")});get(ref(db,"users/".concat(a.uid,"/money/year").concat(year,"/month").concat(month-1))).then(function(e){var t,n,o,r;e.exists()?(n=t=0,get(ref(db,"users/".concat(a.uid,"/money/year").concat(year,"/month").concat(month,"/income"))).then(function(e){e.exists()&&(t=e.val())}),get(ref(db,"users/".concat(a.uid,"/money/year").concat(year,"/month").concat(month-1,"/income"))).then(function(e){e.exists()&&(n=e.val(),e=(t-n)/n,incomePercent.textContent=0<e?"+"+parseFloat(100*e).toFixed(2):parseFloat(100*e).toFixed(2))}),r=o=0,get(ref(db,"users/".concat(a.uid,"/money/year").concat(year,"/month").concat(month,"/expense"))).then(function(e){e.exists()&&(o=e.val())}),get(ref(db,"users/".concat(a.uid,"/money/year").concat(year,"/month").concat(month-1,"/expense"))).then(function(e){e.exists()&&(r=e.val(),e=(o-r)/r,expensePercent.textContent=0<e?"+"+parseFloat(100*e).toFixed(2):parseFloat(100*e).toFixed(2))})):(incomePercent.textContent="0.00",expensePercent.textContent="0.00")})})},setTotalBalance=function(){return new Promise(function(r,a){auth.onAuthStateChanged(function(e){var n,o,t;e?(n=e.uid,o=0,get(ref(db,"users/".concat(n,"/money"))).then(function(e){var t;e.exists()?(t=[],e.forEach(function(e){e=e.key,e=get(ref(db,"users/".concat(n,"/money/").concat(e))).then(function(e){e.forEach(function(e){var e=e.val();e&&void 0!==e.income&&void 0!==e.expense&&(e=e.income-e.expense,o+=e)})});t.push(e)}),Promise.all(t).then(function(){totalBalance.textContent="".concat(formatNumber(o)),r()}).catch(function(e){console.error("Error reading month data: ",e),a(e)})):r()}).catch(function(e){console.error("Error reading user data: ",e),a(e)}),e=(new Date).getFullYear(),t=(new Date).getMonth(),get(ref(db,"users/".concat(n,"/money/year").concat(e,"/month").concat(t))).then(function(e){e.exists()&&void 0!==(e=e.val()).income&&void 0!==e.expense?(e=e.income-e.expense,revenueLastMonth.textContent=formatNumber(e)):revenueLastMonth.textContent=0}).catch(function(e){console.error("Error fetching last month data:",e)})):a("User not authenticated")})})},_checkIfUserNeedNewDateInDataBase=function(){var n=0;auth.onAuthStateChanged(function(t){get(ref(db,"users/".concat(t.uid,"/money/year").concat(year))).then(function(e){e.exists()?get(ref(db,"users/".concat(t.uid,"/money/year").concat(year,"/month").concat(month))).then(function(e){e.exists()||get(ref(db,"users/".concat(t.uid,"/subs"))).then(function(e){e.exists()&&e.forEach(function(e){e=e.val();n=parseFloat(n)+parseFloat(e.price)})}).then(function(){update(ref(db,"users/".concat(t.uid,"/money/year").concat(year)),_defineProperty({},"month".concat(month),{income:0,expense:n,types:{food:0,health:0,bills:0,entertainment:0,transportation:0,miscellaneous:n}}))})}):(get(ref(db,"users/".concat(t.uid,"/subs"))).then(function(e){e.exists()&&e.forEach(function(e){e=e.val();n=parseFloat(n)+parseFloat(e.price)})}).then(function(){set(ref(db,"users/".concat(t.uid,"/money/year").concat(year,"/month").concat(month)),{income:0,expense:n,types:{food:0,health:0,bills:0,entertainment:0,transportation:0,miscellaneous:n}})}),_checkIfUserNeedNewDateInDataBase())})})},setBudgetSpentBox=function(){auth.onAuthStateChanged(function(n){var e=ref(db,"users/".concat(n.uid,"/limit"));onValue(e,function(e){var t=e.val();budgetLimit.textContent=formatNumber(t),onValue(ref(db,"users/".concat(n.uid,"/money/year").concat(year,"/month").concat(month,"/expense")),function(e){e.exists()?(e=e.val(),budgetSpent.textContent=formatNumber(e),budgetLeft.textContent=formatNumber(t-e)):(budgetSpent.textContent=formatNumber(0),budgetLeft.textContent=formatNumber(t))})})})},setExpenseSplit=function(){auth.onAuthStateChanged(function(e){var t,n,o,r,a,c,i=ref(db,"users/".concat(e.uid,"/money/year").concat(year,"/month").concat(currentMonth,"/expense")),s=ref(db,"users/".concat(e.uid,"/money/year").concat(year,"/month").concat(currentMonth,"/types/food")),u=ref(db,"users/".concat(e.uid,"/money/year").concat(year,"/month").concat(currentMonth,"/types/health")),l=ref(db,"users/".concat(e.uid,"/money/year").concat(year,"/month").concat(currentMonth,"/types/bills")),d=ref(db,"users/".concat(e.uid,"/money/year").concat(year,"/month").concat(currentMonth,"/types/entertainment")),p=ref(db,"users/".concat(e.uid,"/money/year").concat(year,"/month").concat(currentMonth,"/types/transportation")),m=ref(db,"users/".concat(e.uid,"/money/year").concat(year,"/month").concat(currentMonth,"/types/miscellaneous")),h=0,f=0,y=0,g=0,b=0,v=0,x=0;onValue(i,function(e){e.exists()?(h=e.val(),expenseSplitTotal.textContent=formatNumber(e.val())):expenseSplitTotal.textContent=0,e.val()<=0?(foodPercent.lastElementChild.lastElementChild.textContent="0%",healthPercent.lastElementChild.lastElementChild.textContent="0%",billsPercent.lastElementChild.lastElementChild.textContent="0%",entertainmentPercent.lastElementChild.lastElementChild.textContent="0%",miscellaneousPercent.lastElementChild.lastElementChild.textContent="0%",transportationPercent.lastElementChild.lastElementChild.textContent="0%"):(onValue(s,function(e){e.exists()&&(t=e.val(),f=parseFloat(t/h*100),foodPercent.lastElementChild.lastElementChild.textContent=parseInt(t/h*100)+"%",setCircleBg(f,y,g,b,v,x))}),onValue(u,function(e){e.exists()&&(n=e.val(),y=parseFloat(n/h*100),healthPercent.lastElementChild.lastElementChild.textContent=parseInt(n/h*100)+"%",setCircleBg(f,y,g,b,v,x))}),onValue(l,function(e){e.exists()&&(o=e.val(),g=parseFloat(o/h*100),billsPercent.lastElementChild.lastElementChild.textContent=parseInt(o/h*100)+"%",setCircleBg(f,y,g,b,v,x))}),onValue(d,function(e){e.exists()&&(r=e.val(),b=parseFloat(r/h*100),entertainmentPercent.lastElementChild.lastElementChild.textContent=parseInt(r/h*100)+"%",setCircleBg(f,y,g,b,v,x))}),onValue(p,function(e){e.exists()&&(a=e.val(),v=parseFloat(a/h*100),transportationPercent.lastElementChild.lastElementChild.textContent=parseInt(a/h*100)+"%",setCircleBg(f,y,g,b,v,x))}),onValue(m,function(e){e.exists()&&(c=e.val(),x=parseFloat(c/h*100),miscellaneousPercent.lastElementChild.lastElementChild.textContent=parseInt(c/h*100)+"%",setCircleBg(f,y,g,b,v,x))}))})})},setCircleBg=function(e,t,n,o,r,a){expenseSplitCircle.style.background="conic-gradient(#ffe562 0 ".concat(e,"%,#f874a3 0 ").concat(e+t,"%,#7776f8 0 ").concat(e+t+n,"%,#96e298 0 ").concat(e+t+n+o,"%,#d474fc 0 ").concat(e+t+n+o+r,"%,#ff8e62 0 ").concat(e+t+n+o+r+a,"%,rgba(0,0,0,.1) 100% 100%)")},createRevenueFlow=function(){auth.onAuthStateChanged(function(e){e?(e=ref(db,"users/".concat(e.uid,"/money/year").concat(year)),onValue(e,function(e){var n,o,r;e.exists()?(n=[],e.forEach(function(e){var t=e.key,e=e.val(),t=parseInt(t.replace("month",""))-1;n.push({index:t,income:e.income})}),n.sort(function(e,t){return e.index-t.index}),e=n.slice(-7),o=Math.max.apply(Math,_toConsumableArray(e.map(function(e){return e.income}))),r=7,e.reverse().forEach(function(e){var t=monthNamesShort[e.index],n=parseFloat(e.income)/o*100;revenueList.children[r-1].lastElementChild.textContent=t,revenueList.children[r-1].firstElementChild.style.height="".concat(parseInt(n),"%"),revenueList.children[r-1].firstElementChild.firstElementChild.firstElementChild.textContent="+$".concat((e.income/1e3).toFixed(2),"K"),r--})):console.log("Can't create revenue flow. User doesn't have this year in data")})):console.log("User is not logged in.")})},toggleAddIncomePopup=function(){resetAllPopups(),addIncomePopup.classList.toggle("hidden"),popupsBg.classList.toggle("hidden")},toggleAddExpensePopup=function(){resetAllPopups(),addExpensePopup.classList.toggle("hidden"),popupsBg.classList.toggle("hidden")},toggleAddSub=function(){resetAllPopups(),addSubPopup.classList.toggle("hidden"),popupsBg.classList.toggle("hidden")},addIncome=function(){0<addIncomeInput.value&&(auth.onAuthStateChanged(function(t){var e=ref(db,"users/".concat(t.uid,"/money/year").concat(year,"/month").concat(month,"/income"));get(e).then(function(e){e.exists()&&update(ref(db,"users/".concat(t.uid,"/money/year").concat(year,"/month").concat(month)),{income:e.val()+parseFloat(addIncomeInput.value)}),addIncomeInput.value=""})}),resetAllPopups(),setTotalBalance(),setCurrentIncomeAndExpense())},addExpense=function(){0<addExpenseInput.value&&(auth.onAuthStateChanged(function(t){var e=ref(db,"users/".concat(t.uid,"/money/year").concat(year,"/month").concat(month,"/expense"));get(e).then(function(e){e.exists()&&update(ref(db,"users/".concat(t.uid,"/money/year").concat(year,"/month").concat(month)),{expense:e.val()+parseFloat(addExpenseInput.value)})}).then(get(ref(db,"users/".concat(t.uid,"/money/year").concat(year,"/month").concat(month,"/types/").concat(expenseSelect.value))).then(function(e){update(ref(db,"users/".concat(t.uid,"/money/year").concat(year,"/month").concat(month,"/types")),_defineProperty({},expenseSelect.value,e.val()+parseFloat(addExpenseInput.value))),update(ref(db,"users/".concat(t.uid,"/money/year").concat(year,"/month").concat(month,"/spendings")),_defineProperty({},"spen".concat(mili*Math.floor(1e3*Math.random())),{type:expenseSelect.value,price:parseFloat(addExpenseInput.value),date:"".concat(currentDate.getDate(),".").concat(month,".").concat(year)})),addExpenseInput.value=""}))}),resetAllPopups(),setTotalBalance(),setCurrentIncomeAndExpense(),setExpenseSplit(),setBudgetSpentBox())},addSub=function(){auth.onAuthStateChanged(function(t){var e,n;""!==subNameInput.value&&""!==subPriceInput.value&&""!==subPayementInput.value&&(e=ref(db,"users/".concat(t.uid,"/money/year").concat(year,"/month").concat(month,"/expense")),n=new Date("".concat(year),"".concat(month),"".concat(currentDate.getDate())),n=new Date(n.setMonth(n.getMonth()+parseInt(subPayementInput.value))),update(ref(db,"users/".concat(t.uid,"/subs/").concat(mili*Math.floor(100*Math.random()))),{name:subNameInput.value,price:subPriceInput.value,dateOfBuy:"".concat(year,", ").concat(month,", ").concat(currentDate.getDate()),paymentIntervalInMonths:subPayementInput.value,dateOfPay:"".concat(n.getFullYear(),", ").concat(n.getMonth()+1,", ").concat(n.getDate())}),get(e).then(function(e){e.exists()&&update(ref(db,"users/".concat(t.uid,"/money/year").concat(year,"/month").concat(month)),{expense:e.val()+parseFloat(subPriceInput.value)})}).then(get(ref(db,"users/".concat(t.uid,"/money/year").concat(year,"/month").concat(month,"/types/miscellaneous"))).then(function(e){update(ref(db,"users/".concat(t.uid,"/money/year").concat(year,"/month").concat(month,"/types")),{miscellaneous:e.val()+parseFloat(subPriceInput.value)}),subNameInput.value="",subPriceInput.value="",subPayementInput.value=""}))),resetAllPopups()})},changeSub=function(){""!==subChangeNameInput.value&&""!==subChangePriceInput.value&&(auth.onAuthStateChanged(function(e){var t=ref(db,"users/".concat(e.uid,"/subs/").concat(currentChangeSubId)),n=ref(db,"users/".concat(e.uid,"/money/year").concat(year,"/month").concat(month,"/expense")),o=ref(db,"users/".concat(e.uid,"/money/year").concat(year,"/month").concat(month)),r=ref(db,"users/".concat(e.uid,"/money/year").concat(year,"/month").concat(month,"/types")),e=ref(db,"users/".concat(e.uid,"/money/year").concat(year,"/month").concat(month,"/types/miscellaneous")),a=0,c=0,i=0,s=0;get(t).then(function(e){e=e.val();c=e.price,i=subChangePriceInput.value,update(t,{name:subChangeNameInput.value,price:parseFloat(subChangePriceInput.value)})}),get(e).then(function(e){s=e.val()}).then(function(){update(r,{miscellaneous:parseFloat(s)-parseFloat(c)+parseFloat(i)})}),get(n).then(function(e){a=e.val()}).then(function(){update(o,{expense:parseFloat(a)-parseFloat(c)+parseFloat(i)})})}),resetAllPopups(),setTotalBalance())},createLastSpendings=function(){auth.onAuthStateChanged(function(e){e=ref(db,"users/".concat(e.uid,"/money/year").concat(year,"/month").concat(month,"/spendings"));onValue(e,function(e){lastSpendings.innerHTML="",e.exists()?(e.forEach(function(e){var t=e.val(),n=document.createElement("li");n.classList.add("main__last-item","posr"),n.style.order="-".concat(orderOfLastSpending),n.id=e.key,n.innerHTML='<div class="main__container--30">\n\t\t\t\t<p class="main__text main__text--upcase main__text--20">'.concat(t.type,'</p>\n\t\t\t\t</div>\n\t\t\t\t\t <div class="main__container--30 no-phone">\n\t\t\t\t\t  <p class="main__text main__text--18 main__text--80alpha">').concat(t.date,'</p>\n\t\t\t\t\t\t  </div>\n\t\t\t\t\t\t\t <div class="main__container--30">\n\t\t\t\t\t\t\t\t <p class="main__text main__text--20 main__text--bold">-').concat(t.price,'<span class="currency"></span></p>\n\t\t\t\t\t\t\t\t  <i class="fa-solid fa-ellipsis-vertical spending-dots"></i>\n\t\t\t\t\t\t\t\t\t\t</div> \n\t\t\t\t\t\t\t\t\t\t<div class="last__spendingbg">\n\t\t\t\t\t<button class="last__spendingbtn"><i class="fa-solid fa-trash-can"></i></button>\n\t\t\t\t\t<button class="spending-x"><i class="fa-solid fa-x"></i></button>\n\t\t\t\t\t</div>'),lastSpendings.append(n),orderOfLastSpending++}),(spendingBtns=document.querySelectorAll(".spending-dots")).forEach(function(e){e.addEventListener("click",spendingOptions)}),(spendingXBtns=document.querySelectorAll(".spending-x")).forEach(function(e){e.addEventListener("click",spendingOptions)}),(spendingDeleteBtns=document.querySelectorAll(".last__spendingbtn")).forEach(function(e){e.addEventListener("click",deleteSpending)})):console.log("Snapshot for creating last spendings don't exist"),setCurrency()})})},setProfileInfo=function(){auth.onAuthStateChanged(function(e){var t=ref(db,"users/".concat(e.uid,"/email")),n=ref(db,"users/".concat(e.uid,"/limit")),e=ref(db,"users/".concat(e.uid,"/currency"));onValue(t,function(e){e.exists()&&(userEmail.textContent=e.val())}),onValue(n,function(e){e.exists()&&(profileLimitInput.value=e.val())}),onValue(e,function(t){t.exists()&&profileOptions.forEach(function(e){e.value==t.val()?e.selected=!0:e.selected=!1})})})},setCurrency=function(){return new Promise(function(o,r){auth.onAuthStateChanged(function(e){var n=document.querySelectorAll(".currency"),e=ref(db,"users/".concat(e.uid,"/currency"));onValue(e,function(t){t.exists()?(n.forEach(function(e){e.textContent=t.val()}),o()):r("No currency data found")})})})},changeLimit=function(){auth.onAuthStateChanged(function(e){e=ref(db,"users/".concat(e.uid));update(e,{limit:parseInt(profileLimitInput.value)})})},changeCurrency=function(){auth.onAuthStateChanged(function(e){e=ref(db,"users/".concat(e.uid));update(e,{currency:currencySelect.value})})},setEverything=(()=>{var e=_asyncToGenerator(_regeneratorRuntime().mark(function e(){return _regeneratorRuntime().wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return loginBox.classList.add("hidden"),loadingBox.style.display="flex",e.next=4,Promise.all([checkIfSubsGotPayed(),_checkIfUserNeedNewDateInDataBase(),setItemsToSubBox(),setCurrentIncomeAndExpense(),setTotalBalance(),setBudgetSpentBox(),setExpenseSplit(),createRevenueFlow(),createLastSpendings(),setProfileInfo(),setCurrency()]);case 4:appLoaded();case 5:case"end":return e.stop()}},e)}));return function(){return e.apply(this,arguments)}})(),toggleChangeSubPopup=function(t){resetAllPopups(),subChangePopup.classList.toggle("hidden"),popupsBg.classList.toggle("hidden"),auth.onAuthStateChanged(function(e){e=ref(db,"users/".concat(e.uid,"/subs/").concat(t.parentElement.parentElement.parentElement.id));get(e).then(function(e){e=e.val();subChangeNameInput.value=e.name,subChangePriceInput.value=e.price}),currentChangeSubId=t.parentElement.parentElement.parentElement.id})},formatNumber=function(e){e=e.toFixed(2);return e=(e=e.replace(/\B(?=(\d{3})+(?!\d))/g,",")).endsWith(".00")?e.slice(0,-3):e},resetAllPopups=function(){popupsBg.classList.add("hidden"),addExpensePopup.classList.add("hidden"),addIncomePopup.classList.add("hidden"),addSubPopup.classList.add("hidden"),subChangePopup.classList.add("hidden")},resetLoginErrors=function(){passwordError.textContent="",emailError.textContent=""};function subOptions(){this.parentElement.parentElement.firstElementChild.classList.toggle("sub-active")}function spendingOptions(){this.parentElement.parentElement.lastElementChild.classList.toggle("spending-active")}function deleteSpending(){var u=this.parentElement.parentElement.id;auth.onAuthStateChanged(function(t){var n,o,r,a,c=ref(db,"users/".concat(t.uid,"/money/year").concat(year,"/month").concat(month,"/spendings/").concat(u)),e=ref(db,"users/".concat(t.uid,"/money/year").concat(year,"/month").concat(month,"/expense")),i=ref(db,"users/".concat(t.uid,"/money/year").concat(year,"/month").concat(month)),s=ref(db,"users/".concat(t.uid,"/money/year").concat(year,"/month").concat(month,"/types"));get(c).then(function(e){e.exists()&&(e=e.val(),n=e.type,o=e.price)}).then(function(){get(e).then(function(e){a=e.val()}).then(function(){var e=ref(db,"users/".concat(t.uid,"/money/year").concat(year,"/month").concat(month,"/types/").concat(n));get(e).then(function(e){r=e.val()}).then(function(){update(s,_defineProperty({},n,parseFloat(r-o))),update(i,{expense:parseFloat(a-o)})}).then(function(){remove(c)})})})})}function subType(){var e=this;auth.onAuthStateChanged(function(n){var o=ref(db,"users/".concat(n.uid,"/subs/").concat(e.parentElement.parentElement.parentElement.id)),r=ref(db,"users/".concat(n.uid,"/money/year").concat(year,"/month").concat(month,"/expense")),a=ref(db,"users/".concat(n.uid,"/money/year").concat(year,"/month").concat(month,"/types")),c=ref(db,"users/".concat(n.uid,"/money/year").concat(year,"/month").concat(month,"/types/miscellaneous"));switch(e.textContent){case"Delete":get(o).then(function(e){var t;e.exists()&&(t=e.val(),get(r).then(function(e){e.exists()&&(e=e.val(),update(ref(db,"users/".concat(n.uid,"/money/year").concat(year,"/month").concat(month)),{expense:parseFloat(e)-parseFloat(t.price)}))}),get(c).then(function(e){e.exists()&&update(a,{miscellaneous:parseFloat(e.val())-parseFloat(t.price)})}),remove(o))});break;case"Edit":toggleChangeSubPopup(e)}e.parentElement.parentElement.parentElement.firstElementChild.classList.toggle("sub-active")})}function setInputType(){inputType=this.id,loginTopBtn.forEach(function(e){e.classList.remove("login-btn-active")}),this.classList.add("login-btn-active")}function changeSite(){switch(this.id){case"overview":overviewBox.classList.remove("hidden"),profileBox.classList.add("hidden");break;case"profile":overviewBox.classList.add("hidden"),profileBox.classList.remove("hidden")}}function setCurrentMonthForExpenseSplit(){currentMonth=this.value,setExpenseSplit()}var appLoaded=function(){loadingBox.style.display="none",document.body.classList.remove("scroll-hidden")},setEventListeners=(window.onload=function(){checkUserAuth(),revenueBoxScroll.scrollLeft=revenueBoxScroll.scrollWidth},function(){loginTopBtn.forEach(function(e){e.addEventListener("click",setInputType)}),resetPopupsBtns.forEach(function(e){e.addEventListener("click",resetAllPopups)}),loginInput.forEach(function(e){e.addEventListener("click",resetLoginErrors)}),expenseSplitOptions.forEach(function(e){e.value==currentMonth?e.selected=!0:e.selected=!1}),loginBtn.addEventListener("click",checkWhatTypeOfAction),addBtnTotalBalance.addEventListener("click",toggleAddIncomePopup),incomeBoxBtn.addEventListener("click",toggleAddIncomePopup),expenseBoxBtn.addEventListener("click",toggleAddExpensePopup),subBoxBtn.addEventListener("click",toggleAddSub),addIncomeBtn.addEventListener("click",addIncome),addExpenseBtn.addEventListener("click",addExpense),addSubBtn.addEventListener("click",addSub),changeSubBtn.addEventListener("click",changeSub),overviewBtn.addEventListener("click",changeSite),profileBtn.addEventListener("click",changeSite),signoutBtn.addEventListener("click",signoutUser),profileLimitInput.addEventListener("change",changeLimit),currencySelect.addEventListener("change",changeCurrency),expenseSplitMonth.addEventListener("change",setCurrentMonthForExpenseSplit)});setEventListeners();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
