function _typeof(e){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function _toConsumableArray(e){return _arrayWithoutHoles(e)||_iterableToArray(e)||_unsupportedIterableToArray(e)||_nonIterableSpread()}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _unsupportedIterableToArray(e,t){var n;if(e)return"string"==typeof e?_arrayLikeToArray(e,t):"Map"===(n="Object"===(n={}.toString.call(e).slice(8,-1))&&e.constructor?e.constructor.name:n)||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?_arrayLikeToArray(e,t):void 0}function _iterableToArray(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}function _arrayWithoutHoles(e){if(Array.isArray(e))return _arrayLikeToArray(e)}function _arrayLikeToArray(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,o=Array(t);n<t;n++)o[n]=e[n];return o}function _defineProperty(e,t,n){return(t=_toPropertyKey(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function _toPropertyKey(e){e=_toPrimitive(e,"string");return"symbol"==_typeof(e)?e:e+""}function _toPrimitive(e,t){if("object"!=_typeof(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0===n)return("string"===t?String:Number)(e);n=n.call(e,t||"default");if("object"!=_typeof(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}import{initializeApp}from"https://www.gstatic.com/firebasejs/11.0.1/firebase-app.js";import{getAuth,createUserWithEmailAndPassword,signInWithEmailAndPassword,browserLocalPersistence,onAuthStateChanged,signOut}from"https://www.gstatic.com/firebasejs/11.0.1/firebase-auth.js";import{getDatabase,ref,set,get,onValue,update,remove}from"https://www.gstatic.com/firebasejs/11.0.1/firebase-database.js";var overviewBox=document.querySelector(".main__box"),profileBox=document.querySelector(".main__profile"),subsriptionBox=document.querySelector(".main__subsbox"),totalSubs=document.querySelector("#totalSubs"),incomeTotal=document.querySelector("#incomeTotal"),expenseTotal=document.querySelector("#expenseTotal"),incomePercent=document.querySelector("#incomePercent"),expensePercent=document.querySelector("#expensePercent"),totalBalance=document.querySelector("#totalBalance"),revenueLastMonth=document.querySelector("#revenueLastMonth"),budgetSpent=document.querySelector("#amountSpent"),budgetLimit=document.querySelector("#amountToSpent"),budgetLeft=document.querySelector("#amountLeft"),expenseSplitTotal=document.querySelector("#expenseSplitTotal"),expenseSplitMonth=document.querySelector("#expenseSplitMonth"),foodPercent=document.querySelector("#food"),healthPercent=document.querySelector("#health"),billsPercent=document.querySelector("#bills"),entertainmentPercent=document.querySelector("#entertainment"),transportationPercent=document.querySelector("#transportation"),miscellaneousPercent=document.querySelector("#miscellaneous"),expenseSplitCircle=document.querySelector(".main__circle"),revenueList=document.querySelector(".main__revenue-list"),lastSpendings=document.querySelector(".main__last-list"),loginTopBtn=document.querySelectorAll(".login__topbtn"),emailInput=document.querySelector("#email"),passwordInput=document.querySelector("#password"),loginBtn=document.querySelector(".login__mainbtn"),loginBox=document.querySelector(".login"),addBtnTotalBalance=document.querySelector("#addTotal"),addIncomePopup=document.querySelector(".add__popup"),addExpensePopup=document.querySelector(".expense__popup"),subChangePopup=document.querySelector(".subchange__popup"),addSubPopup=document.querySelector(".sub__popup"),addIncomeBtn=document.querySelector("#addIncome"),addExpenseBtn=document.querySelector("#addExpense"),addSubBtn=document.querySelector("#addSub"),changeSubBtn=document.querySelector("#changeSub"),incomeBoxBtn=document.querySelector("#incomeBtn"),expenseBoxBtn=document.querySelector("#expenseBtn"),subBoxBtn=document.querySelector("#subBtn"),addIncomeInput=document.querySelector("#addIncomeInput"),addExpenseInput=document.querySelector("#addExpenseInput"),expenseSelect=document.querySelector("#expenseType"),subNameInput=document.querySelector("#addSubName"),subPriceInput=document.querySelector("#addSubAmount"),subPayementInput=document.querySelector("#addPaymentInterval"),subChangePriceInput=document.querySelector("#changeSubAmount"),subChangeNameInput=document.querySelector("#changeSubName"),signoutBtn=document.querySelector("#signout"),profileBtn=document.querySelector("#profile"),overviewBtn=document.querySelector("#overview"),revenueBoxScroll=document.querySelector(".main__revenue-list"),userEmail=document.querySelector("#profile__email"),profileLimitInput=document.querySelector(".profile__input"),currencySelect=document.querySelector("#currencySelect"),profileOptions=document.querySelectorAll(".profile__option"),subDotsBtn="",subXBtns="",subTypesBtn="",currentChangeSubId="",currentDate=new Date,year=(new Date).getFullYear(),month=(new Date).getMonth()+1,mili=(new Date).getMilliseconds(),maxIncome=0,orderOfLastSpending=0,inputType="",userLimit=0,totalUserBalance=0,monthNames=["January","February","March","April","May","June","July","August","September","October","November","December"],monthNamesShort=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sept","Oct","Nov","Dec"],firebaseConfig={apiKey:"AIzaSyAnQPHugOMwt4HwC-i-1srtFBr8oe1OEiY",authDomain:"mywealth-8f207.firebaseapp.com",projectId:"mywealth-8f207",storageBucket:"mywealth-8f207.appspot.com",messagingSenderId:"735896347785",appId:"1:735896347785:web:851e7179c61fb1e4e59258",databaseURL:"https://mywealth-8f207-default-rtdb.europe-west1.firebasedatabase.app"},app=initializeApp(firebaseConfig),auth=getAuth(app),db=getDatabase(app),checkWhatTypeOfAction=function(){switch(loginTopBtn.forEach(function(e){e.classList.contains("login-btn-active")&&(inputType=e.id)}),inputType){case"signup":createUser();break;case"signin":loginUser()}},checkUserAuth=function(){onAuthStateChanged(auth,function(e){e?(setEverything(),console.log("User is already logged in:",e.email)):console.log("No user is logged in")})},createUser=function(){""!==passwordInput.value&&""!==emailInput.value&&"signup"===inputType&&(createUserWithEmailAndPassword(auth,emailInput.value,passwordInput.value).then(function(e){e=e.user;set(ref(db,"users/".concat(e.uid)),{email:emailInput.value,currency:"$",limit:3e3}).catch(function(e){console.error("Error adding user:",e)}),set(ref(db,"users/".concat(e.uid,"/money/year").concat(year,"/month").concat(month)),{income:0,expense:0,types:{food:0,health:0,bills:0,entertainment:0,transportation:0,miscellaneous:0}}).catch(function(e){console.error("Error adding user:",e)})}).catch(function(e){var t=e.code;console.error("Error creating user:",t,e.message)}),setEverything())},loginUser=function(){""!==passwordInput.value&&""!==emailInput.value&&"signin"===inputType&&signInWithEmailAndPassword(auth,emailInput.value,passwordInput.value).then(function(){setEverything()}).catch(function(e){var t=e.code;console.error("Error signing in:",t,e.message)})},signoutUser=function(){signOut(auth).then(function(){console.log("User signed out successfully"),window.location.reload()}).catch(function(e){console.error("Error signing out:",e)})},setItemsToSubBox=function(){auth.onAuthStateChanged(function(e){e=ref(db,"users/".concat(e.uid,"/subs"));onValue(e,function(e){subsriptionBox.innerHTML="",e.exists()&&e.forEach(function(e){var t=e.val(),n=document.createElement("div"),o=document.createElement("div"),a=document.createElement("p"),c=document.createElement("p"),r=document.createElement("div"),s=document.createElement("p"),u=document.createElement("i"),i=document.createElement("div"),l=document.createElement("div"),d=document.createElement("button"),m=document.createElement("button"),p=document.createElement("i"),e=(n.id=e.key,n.classList.add("main__subsbox-item"),r.classList.add("display-flex","aligncenter"),a.classList.add("main__text","main__text--20"),c.classList.add("main__text","main__text--80alpha","main__text--14"),s.classList.add("main__text","main__text--20","main__text--bold"),u.classList.add("fa-solid","fa-ellipsis-vertical","sub-dots"),i.classList.add("main__subsbox-item-bg"),l.classList.add("main__subsbox-item-btns"),d.classList.add("main__subsbox-item-btn"),m.classList.add("main__subsbox-item-btn"),p.classList.add("fa-solid","fa-x","sub-x"),a.textContent=t.name,s.innerHTML="".concat(t.price,'<span class="currency"></span>'),new Date(t.dateOfPay));c.textContent="Next ".concat(e.getDate()," ").concat(monthNames[e.getMonth()]),d.textContent="Delete",m.textContent="Edit",o.append(a,c),r.append(s,u),l.append(d,m),i.append(l,p),n.append(i,o,r),subsriptionBox.append(n),(subDotsBtn=document.querySelectorAll(".sub-dots")).forEach(function(e){e.addEventListener("click",subOptions)}),(subXBtns=document.querySelectorAll(".sub-x")).forEach(function(e){e.addEventListener("click",subOptions)}),(subTypesBtn=document.querySelectorAll(".main__subsbox-item-btn")).forEach(function(e){e.addEventListener("click",subType)})}),totalSubs.textContent=subsriptionBox.childElementCount,setCurrency()})})};function subOptions(){this.parentElement.parentElement.firstElementChild.classList.toggle("sub-active")}var checkIfSubsGotPayed=function(){auth.onAuthStateChanged(function(a){var e=ref(db,"users/".concat(a.uid,"/subs"));get(e).then(function(e){e.forEach(function(e){var t=e.val(),n=t.dateOfPay,o=new Date(n);o.setMonth(o.getMonth()+parseInt(t.paymentIntervalInMonths)),t=(0===o.getMonth()?"".concat(o.getFullYear(),", ").concat(o.getMonth()+1,", "):"".concat(o.getFullYear(),", ").concat(o.getMonth(),", ")).concat(o.getDate()),currentDate>=new Date(n)&&update(ref(db,"users/".concat(a.uid,"/subs/").concat(e.key)),{dateOfBuy:n,dateOfPay:t})})})})};function subType(){var e=this;auth.onAuthStateChanged(function(n){var o=ref(db,"users/".concat(n.uid,"/subs/").concat(e.parentElement.parentElement.parentElement.id)),a=ref(db,"users/".concat(n.uid,"/money/year").concat(year,"/month").concat(month,"/expense")),c=ref(db,"users/".concat(n.uid,"/money/year").concat(year,"/month").concat(month,"/types")),r=ref(db,"users/".concat(n.uid,"/money/year").concat(year,"/month").concat(month,"/types/miscellaneous"));switch(e.textContent){case"Delete":get(o).then(function(e){var t;e.exists()&&(t=e.val(),get(a).then(function(e){e.exists()&&(e=e.val(),update(ref(db,"users/".concat(n.uid,"/money/year").concat(year,"/month").concat(month)),{expense:parseFloat(e)-parseFloat(t.price)}))}),get(r).then(function(e){e.exists()&&update(c,{miscellaneous:parseFloat(e.val())-parseFloat(t.price)})}),remove(o))});break;case"Edit":toggleChangeSubPopup(e)}e.parentElement.parentElement.parentElement.firstElementChild.classList.toggle("sub-active")})}var setCurrentIncomeAndExpense=function(){auth.onAuthStateChanged(function(c){var e="users/".concat(c.uid,"/money/year").concat(year,"/month").concat(month,"/income"),e=ref(db,e),e=(onValue(e,function(e){e.exists()?incomeTotal.textContent=formatNumber(e.val()):console.log("No data available for this path.")}),"users/".concat(c.uid,"/money/year").concat(year,"/month").concat(month,"/expense")),e=ref(db,e);onValue(e,function(e){e.exists()?expenseTotal.textContent=formatNumber(e.val()):console.log("No data available for this path.")});get(ref(db,"users/".concat(c.uid,"/money/year").concat(year,"/month").concat(month-1))).then(function(e){var t,n,o,a;e.exists()?(n=t=0,get(ref(db,"users/".concat(c.uid,"/money/year").concat(year,"/month").concat(month,"/income"))).then(function(e){e.exists()&&(t=e.val())}),get(ref(db,"users/".concat(c.uid,"/money/year").concat(year,"/month").concat(month-1,"/income"))).then(function(e){e.exists()&&(n=e.val(),e=(t-n)/n,incomePercent.textContent=0<e?"+"+parseFloat(100*e).toFixed(2):parseFloat(100*e).toFixed(2))}),a=o=0,get(ref(db,"users/".concat(c.uid,"/money/year").concat(year,"/month").concat(month,"/expense"))).then(function(e){e.exists()&&(o=e.val())}),get(ref(db,"users/".concat(c.uid,"/money/year").concat(year,"/month").concat(month-1,"/expense"))).then(function(e){e.exists()&&(a=e.val(),e=(o-a)/a,expensePercent.textContent=0<e?"+"+parseFloat(100*e).toFixed(2):parseFloat(100*e).toFixed(2))})):(incomePercent.textContent="0.00",expensePercent.textContent="0.00")})})},setTotalBalance=function(){auth.onAuthStateChanged(function(e){var t,n,o;e&&(t=e.uid,n=0,get(ref(db,"users/".concat(t,"/money"))).then(function(e){e.exists()?e.forEach(function(e){e=e.key;get(ref(db,"users/".concat(t,"/money/").concat(e))).then(function(e){e.forEach(function(e){var e=e.val();e&&void 0!==e.income&&void 0!==e.expense&&(e=e.income-e.expense,n+=e)}),totalBalance.textContent="".concat(formatNumber(n))}).catch(function(e){console.error("Error reading month data: ",e)})}):console.log("No data found for user")}).catch(function(e){console.error("Error reading user data: ",e)}),e=(new Date).getFullYear(),o=(new Date).getMonth(),get(ref(db,"users/".concat(t,"/money/year").concat(e,"/month").concat(o))).then(function(e){e.exists()&&void 0!==(e=e.val()).income&&void 0!==e.expense?(e=e.income-e.expense,revenueLastMonth.textContent=formatNumber(e)):revenueLastMonth.textContent=0}).catch(function(e){console.error("Error fetching data:",e)}))})},_checkIfUserNeedNewDateInDataBase=function(){auth.onAuthStateChanged(function(t){get(ref(db,"users/".concat(t.uid,"/money/year").concat(year))).then(function(e){e.exists()?get(ref(db,"users/".concat(t.uid,"/money/year").concat(year,"/month").concat(month))).then(function(e){e.exists()||update(ref(db,"users/".concat(t.uid,"/money/year").concat(year)),_defineProperty({},"month".concat(month),{income:0,expense:0,types:{food:0,health:0,bills:0,entertainment:0,transportation:0,miscellaneous:0}}))}):(set(ref(db,"users/".concat(t.uid,"/money/year").concat(year,"/month").concat(month)),{income:0,expense:0,types:{food:0,health:0,bills:0,entertainment:0,transportation:0,miscellaneous:0}}),_checkIfUserNeedNewDateInDataBase())})})};function formatNumber(e){e=e.toFixed(2);return e=(e=e.replace(/\B(?=(\d{3})+(?!\d))/g,",")).endsWith(".00")?e.slice(0,-3):e}var setBudgetSpentBox=function(){auth.onAuthStateChanged(function(n){var e=ref(db,"users/".concat(n.uid,"/limit"));onValue(e,function(e){var t=e.val();budgetLimit.textContent=formatNumber(t),onValue(ref(db,"users/".concat(n.uid,"/money/year").concat(year,"/month").concat(month,"/expense")),function(e){e.exists()?(e=e.val(),budgetSpent.textContent=formatNumber(e),budgetLeft.textContent=formatNumber(t-e)):(budgetSpent.textContent=formatNumber(0),budgetLeft.textContent=formatNumber(t))})})})},setExpenseSplit=function(){auth.onAuthStateChanged(function(e){var t,n,o,a,c,r,s=ref(db,"users/".concat(e.uid,"/money/year").concat(year,"/month").concat(month,"/expense")),u=ref(db,"users/".concat(e.uid,"/money/year").concat(year,"/month").concat(month,"/types/food")),i=ref(db,"users/".concat(e.uid,"/money/year").concat(year,"/month").concat(month,"/types/health")),l=ref(db,"users/".concat(e.uid,"/money/year").concat(year,"/month").concat(month,"/types/bills")),d=ref(db,"users/".concat(e.uid,"/money/year").concat(year,"/month").concat(month,"/types/entertainment")),m=ref(db,"users/".concat(e.uid,"/money/year").concat(year,"/month").concat(month,"/types/transportation")),p=ref(db,"users/".concat(e.uid,"/money/year").concat(year,"/month").concat(month,"/types/miscellaneous")),h=0,f=0,y=0,b=0,g=0,v=0,x=0;onValue(s,function(e){e.exists()&&(h=e.val(),expenseSplitTotal.textContent=formatNumber(e.val())),e.val()<=0?(foodPercent.lastElementChild.lastElementChild.textContent="0%",healthPercent.lastElementChild.lastElementChild.textContent="0%",billsPercent.lastElementChild.lastElementChild.textContent="0%",entertainmentPercent.lastElementChild.lastElementChild.textContent="0%",miscellaneousPercent.lastElementChild.lastElementChild.textContent="0%",transportationPercent.lastElementChild.lastElementChild.textContent="0%"):(onValue(u,function(e){e.exists()&&(t=e.val(),f=parseFloat(t/h*100),foodPercent.lastElementChild.lastElementChild.textContent=parseInt(t/h*100)+"%",setCircleBg(f,y,b,g,v,x))}),onValue(i,function(e){e.exists()&&(n=e.val(),y=parseFloat(n/h*100),healthPercent.lastElementChild.lastElementChild.textContent=parseInt(n/h*100)+"%",setCircleBg(f,y,b,g,v,x))}),onValue(l,function(e){e.exists()&&(o=e.val(),b=parseFloat(o/h*100),billsPercent.lastElementChild.lastElementChild.textContent=parseInt(o/h*100)+"%",setCircleBg(f,y,b,g,v,x))}),onValue(d,function(e){e.exists()&&(a=e.val(),g=parseFloat(a/h*100),entertainmentPercent.lastElementChild.lastElementChild.textContent=parseInt(a/h*100)+"%",setCircleBg(f,y,b,g,v,x))}),onValue(m,function(e){e.exists()&&(c=e.val(),v=parseFloat(c/h*100),transportationPercent.lastElementChild.lastElementChild.textContent=parseInt(c/h*100)+"%",setCircleBg(f,y,b,g,v,x))}),onValue(p,function(e){e.exists()&&(r=e.val(),x=parseFloat(r/h*100),miscellaneousPercent.lastElementChild.lastElementChild.textContent=parseInt(r/h*100)+"%",setCircleBg(f,y,b,g,v,x))}))})}),expenseSplitMonth.textContent=monthNamesShort[month-1]},setCircleBg=function(e,t,n,o,a,c){expenseSplitCircle.style.background="conic-gradient(#ffe562 0 ".concat(e,"%,#f874a3 0 ").concat(e+t,"%,#7776f8 0 ").concat(e+t+n,"%,#96e298 0 ").concat(e+t+n+o,"%,#d474fc 0 ").concat(e+t+n+o+a,"%,#ff8e62 0 ").concat(e+t+n+o+a+c,"%,rgba(0,0,0,.1) 100% 100%)")},createRevenueFlow=function(){auth.onAuthStateChanged(function(e){e?(e=ref(db,"users/".concat(e.uid,"/money/year").concat(year)),onValue(e,function(e){var n,o,a;e.exists()?(n=[],e.forEach(function(e){var t=e.key,e=e.val(),t=parseInt(t.replace("month",""))-1;n.push({index:t,income:e.income})}),n.sort(function(e,t){return e.index-t.index}),e=n.slice(-7),o=Math.max.apply(Math,_toConsumableArray(e.map(function(e){return e.income}))),a=7,e.reverse().forEach(function(e){var t=monthNamesShort[e.index],n=parseFloat(e.income)/o*100;revenueList.children[a-1].lastElementChild.textContent=t,revenueList.children[a-1].firstElementChild.style.height="".concat(parseInt(n),"%"),revenueList.children[a-1].firstElementChild.firstElementChild.firstElementChild.textContent="+$".concat((e.income/1e3).toFixed(2),"K"),a--})):console.log("Can't create revenue flow. User doesn't have this year in data")})):console.log("User is not logged in.")})},toggleAddIncomePopup=function(){addIncomePopup.classList.toggle("hidden")},toggleAddExpensePopup=function(){addExpensePopup.classList.toggle("hidden")};function toggleChangeSubPopup(t){subChangePopup.classList.toggle("hidden"),auth.onAuthStateChanged(function(e){e=ref(db,"users/".concat(e.uid,"/subs/").concat(t.parentElement.parentElement.parentElement.id));get(e).then(function(e){e=e.val();subChangeNameInput.value=e.name,subChangePriceInput.value=e.price}),currentChangeSubId=t.parentElement.parentElement.parentElement.id})}var toggleAddSub=function(){addSubPopup.classList.toggle("hidden")},addIncome=function(){0<addIncomeInput.value&&(auth.onAuthStateChanged(function(t){var e=ref(db,"users/".concat(t.uid,"/money/year").concat(year,"/month").concat(month,"/income"));get(e).then(function(e){e.exists()&&update(ref(db,"users/".concat(t.uid,"/money/year").concat(year,"/month").concat(month)),{income:e.val()+parseFloat(addIncomeInput.value)})})}),toggleAddIncomePopup(),setTotalBalance(),setCurrentIncomeAndExpense())},addExpense=function(){0<addExpenseInput.value&&(auth.onAuthStateChanged(function(t){var e=ref(db,"users/".concat(t.uid,"/money/year").concat(year,"/month").concat(month,"/expense"));get(e).then(function(e){e.exists()&&update(ref(db,"users/".concat(t.uid,"/money/year").concat(year,"/month").concat(month)),{expense:e.val()+parseFloat(addExpenseInput.value)})}).then(get(ref(db,"users/".concat(t.uid,"/money/year").concat(year,"/month").concat(month,"/types/").concat(expenseSelect.value))).then(function(e){update(ref(db,"users/".concat(t.uid,"/money/year").concat(year,"/month").concat(month,"/types")),_defineProperty({},expenseSelect.value,e.val()+parseFloat(addExpenseInput.value))),update(ref(db,"users/".concat(t.uid,"/money/year").concat(year,"/month").concat(month,"/spendings")),_defineProperty({},"spen".concat(mili*Math.floor(1e3*Math.random())),{type:expenseSelect.value,price:parseFloat(addExpenseInput.value),date:"".concat(currentDate.getDate(),".").concat(month,".").concat(year)}))}))}),toggleAddExpensePopup(),setTotalBalance(),setCurrentIncomeAndExpense(),setExpenseSplit(),setBudgetSpentBox())},addSub=function(){auth.onAuthStateChanged(function(t){var e,n;""!==subNameInput.value&&""!==subPriceInput.value&&""!==subPayementInput.value&&(e=ref(db,"users/".concat(t.uid,"/money/year").concat(year,"/month").concat(month,"/expense")),n=new Date("".concat(year,", ").concat(month,", ").concat(currentDate.getDate())),n=new Date(n.setMonth(n.getMonth()+parseInt(subPayementInput.value))),update(ref(db,"users/".concat(t.uid,"/subs/").concat(mili*Math.floor(100*Math.random()))),{name:subNameInput.value,price:subPriceInput.value,dateOfBuy:"".concat(year,", ").concat(month,", ").concat(currentDate.getDate()),paymentIntervalInMonths:subPayementInput.value,dateOfPay:"".concat(n.getFullYear(),", ").concat(n.getMonth()+1,", ").concat(n.getDate())}),get(e).then(function(e){e.exists()&&update(ref(db,"users/".concat(t.uid,"/money/year").concat(year,"/month").concat(month)),{expense:e.val()+parseFloat(subPriceInput.value)})}).then(get(ref(db,"users/".concat(t.uid,"/money/year").concat(year,"/month").concat(month,"/types/").concat(expenseSelect.value))).then(function(e){update(ref(db,"users/".concat(t.uid,"/money/year").concat(year,"/month").concat(month,"/types")),{miscellaneous:e.val()+parseFloat(subPriceInput.value)})}))),toggleAddSub()})},changeSub=function(){""!==subChangeNameInput.value&&""!==subChangePriceInput.value&&(auth.onAuthStateChanged(function(e){var t=ref(db,"users/".concat(e.uid,"/subs/").concat(currentChangeSubId)),n=ref(db,"users/".concat(e.uid,"/money/year").concat(year,"/month").concat(month,"/expense")),o=ref(db,"users/".concat(e.uid,"/money/year").concat(year,"/month").concat(month)),a=ref(db,"users/".concat(e.uid,"/money/year").concat(year,"/month").concat(month,"/types")),e=ref(db,"users/".concat(e.uid,"/money/year").concat(year,"/month").concat(month,"/types/miscellaneous")),c=0,r=0,s=0,u=0;get(t).then(function(e){e=e.val();r=e.price,s=subChangePriceInput.value,update(t,{name:subChangeNameInput.value,price:parseFloat(subChangePriceInput.value)})}),get(e).then(function(e){u=e.val()}).then(function(){update(a,{miscellaneous:parseFloat(u)-parseFloat(r)+parseFloat(s)})}),get(n).then(function(e){c=e.val()}).then(function(){update(o,{expense:parseFloat(c)-parseFloat(r)+parseFloat(s)})})}),subChangePopup.classList.toggle("hidden"),setTotalBalance())},createLastSpendings=function(){auth.onAuthStateChanged(function(e){e=ref(db,"users/".concat(e.uid,"/money/year").concat(year,"/month").concat(month,"/spendings"));onValue(e,function(e){lastSpendings.innerHTML="",e.exists()?e.forEach(function(e){var e=e.val(),t=document.createElement("li");t.classList.add("main__last-item"),t.style.order="-".concat(orderOfLastSpending),t.innerHTML='<div class="main__container--30">\n\t\t\t\t<p class="main__text main__text--upcase main__text--20">'.concat(e.type,'</p>\n\t\t\t\t</div>\n\t\t\t\t\t <div class="main__container--30 no-phone">\n\t\t\t\t\t  <p class="main__text main__text--18 main__text--80alpha">').concat(e.date,'</p>\n\t\t\t\t\t\t  </div>\n\t\t\t\t\t\t\t <div class="main__container--30">\n\t\t\t\t\t\t\t\t <p class="main__text main__text--20 main__text--bold">-').concat(e.price,'<span class="currency"></span></p>\n\t\t\t\t\t\t\t\t  <i class="fa-solid fa-ellipsis-vertical"></i>\n\t\t\t\t\t\t\t\t\t\t</div> '),lastSpendings.append(t),orderOfLastSpending++}):console.log("Snapshot for creating last spendings don't exist"),setCurrency()})})},setProfileInfo=function(){auth.onAuthStateChanged(function(e){var t=ref(db,"users/".concat(e.uid,"/email")),n=ref(db,"users/".concat(e.uid,"/limit")),e=ref(db,"users/".concat(e.uid,"/currency"));onValue(t,function(e){e.exists()&&(userEmail.textContent=e.val())}),onValue(n,function(e){e.exists()&&(profileLimitInput.value=e.val())}),onValue(e,function(t){t.exists()&&profileOptions.forEach(function(e){e.value==t.val()?e.selected=!0:e.selected=!1})})})},setCurrency=function(){auth.onAuthStateChanged(function(e){var n=document.querySelectorAll(".currency"),e=ref(db,"users/".concat(e.uid,"/currency"));onValue(e,function(t){t.exists()&&n.forEach(function(e){e.textContent=t.val()})})})};function setInputType(){inputType=this.id,loginTopBtn.forEach(function(e){e.classList.remove("login-btn-active")}),this.classList.add("login-btn-active")}function changeSite(){switch(this.id){case"overview":overviewBox.classList.remove("hidden"),profileBox.classList.add("hidden");break;case"profile":overviewBox.classList.add("hidden"),profileBox.classList.remove("hidden")}}var changeLimit=function(){auth.onAuthStateChanged(function(e){e=ref(db,"users/".concat(e.uid));update(e,{limit:parseInt(profileLimitInput.value)})})},changeCurrency=function(){auth.onAuthStateChanged(function(e){e=ref(db,"users/".concat(e.uid));update(e,{currency:currencySelect.value})})},setEventListeners=function(){loginTopBtn.forEach(function(e){e.addEventListener("click",setInputType)}),loginBtn.addEventListener("click",checkWhatTypeOfAction),addBtnTotalBalance.addEventListener("click",toggleAddIncomePopup),incomeBoxBtn.addEventListener("click",toggleAddIncomePopup),expenseBoxBtn.addEventListener("click",toggleAddExpensePopup),subBoxBtn.addEventListener("click",toggleAddSub),addIncomeBtn.addEventListener("click",addIncome),addExpenseBtn.addEventListener("click",addExpense),addSubBtn.addEventListener("click",addSub),changeSubBtn.addEventListener("click",changeSub),overviewBtn.addEventListener("click",changeSite),profileBtn.addEventListener("click",changeSite),signoutBtn.addEventListener("click",signoutUser),profileLimitInput.addEventListener("change",changeLimit),currencySelect.addEventListener("change",changeCurrency)},setEverything=(setEventListeners(),function(){loginBox.classList.add("hidden"),document.body.classList.remove("scroll-hidden"),checkIfSubsGotPayed(),_checkIfUserNeedNewDateInDataBase(),setItemsToSubBox(),setCurrentIncomeAndExpense(),setTotalBalance(),setBudgetSpentBox(),setExpenseSplit(),createRevenueFlow(),createLastSpendings(),setProfileInfo(),setCurrency()});window.onload=function(){checkUserAuth(),revenueBoxScroll.scrollLeft=revenueBoxScroll.scrollWidth};
//# sourceMappingURL=data:application/json;charset=utf8;base64,
